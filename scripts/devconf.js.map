{"version":3,"file":"devconf.js","mappings":"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","sources":["webpack://devconf/./src/common.ts","webpack://devconf/./src/sessionize.ts","webpack://devconf/./node_modules/uuid/dist/esm-browser/native.js","webpack://devconf/./node_modules/uuid/dist/esm-browser/rng.js","webpack://devconf/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://devconf/./node_modules/uuid/dist/esm-browser/v4.js","webpack://devconf/./src/devconf.ts","webpack://devconf/./src/event.ts","webpack://devconf/./src/feedback.ts","webpack://devconf/./src/sponsorBlock.ts","webpack://devconf/./src/speakerFeedback.ts"],"sourcesContent":["interface ICurrentSpeaker {\n    name: string;\n    id: string;\n}\n\ndeclare global {\n    var currentSpeaker: ICurrentSpeaker | undefined;\n}\n\nexport const feedbackServerUrl = 'https://ratings-2slkxdorza-nw.a.run.app'\n// export const feedbackServerUrl = 'http://localhost:8080'\n\nexport const getTemplate = (templateId: string) => ((document.getElementById(templateId) as HTMLTemplateElement)\n    ?.cloneNode(true) as HTMLTemplateElement)\n    ?.content\n\nexport const setText = (parent: Element, query: string, value: string) => {\n    (parent.querySelector(query) as HTMLDivElement).innerText = value\n}\n\nexport const addPopupHandler = (\n    elementsToAddPopupTo: NodeListOf<HTMLDivElement>,\n    popupContentBuilder: (div: HTMLDivElement) => Element | null,\n    clickableClass?: string,\n    unclickableClass?: string,\n    onCloseHandler?: () => void,\n    onOpenHandler?: (content: Element) => void,\n) => {\n    const closePopup = () => {\n        window.currentSpeaker = undefined;\n        document.querySelector('div.popupBackdrop')!.classList.add('popupBackdropHidden')\n        // eslint-disable-next-line no-use-before-define\n        document.removeEventListener('keydown', handleCloseKeyPress)\n        const contentToRemove = document.querySelector('div[data-popup-content=\"yes\"]')\n        contentToRemove?.parentNode?.removeChild(contentToRemove)\n        onCloseHandler?.call(this)\n    }\n\n    const handleCloseKeyPress = (event: KeyboardEvent) => {\n        if (event.key === 'Escape') {\n            closePopup()\n        }\n    }\n\n    const popupShare = document.querySelector('div.popupShare')! as HTMLDivElement\n    popupShare.onclick = async () => {\n        if (window.currentSpeaker) {\n            const shareData = {\n                title: `DevConf Speaker: ${window.currentSpeaker.name}`,\n                text: `DevConf Speaker: ${window.currentSpeaker.name}`,\n                url: `${window.location.origin + window.location.pathname}?currentSpeaker=${window.currentSpeaker.id}`,\n            }\n\n            await navigator.share(shareData)\n        }\n    }\n\n    const popupClose = document.querySelector('div.popupClose')! as HTMLDivElement\n    popupClose.onclick = () => {\n        closePopup()\n    }\n\n    const backdrop = document.querySelector('div.popupBackdropHidden')!\n    backdrop.addEventListener('click', closePopup)\n\n    elementsToAddPopupTo.forEach((div) => {\n        const popupContent = popupContentBuilder(div)\n        if (popupContent) {\n            if (clickableClass) {\n                div.classList.add(clickableClass)\n            }\n\n            div.onclick = () => {\n                backdrop.classList.remove('popupBackdropHidden')\n                document.addEventListener('keydown', handleCloseKeyPress)\n\n                const popupContentStage = document.querySelector('div.popupContent')!\n                const dataSlotId = div.attributes['data-slot-id'].value\n                if (dataSlotId) {\n                    popupContentStage.setAttribute(\"speaker-id\", dataSlotId)\n                }\n\n                popupContentStage.querySelectorAll('div.popupBio').forEach((value) => {\n                    popupContentStage.removeChild(value)\n                })\n\n                popupContent.setAttribute('data-popup-content', 'yes')\n                popupContentStage.insertAdjacentElement('beforeend', popupContent)\n                onOpenHandler?.call(this, popupContentStage)\n            }\n        } else {\n            if (unclickableClass) {\n                div.classList.add(unclickableClass)\n            }\n        }\n    })\n}","interface SessionizeSession {\n    id: string;\n    title: string;\n    description: string;\n    startsAt: Date;\n    endsAt: Date;\n    isServiceSession: boolean;\n    isPlenumSession: boolean;\n    speakers: string[];\n    categoryItems: number[];\n    questionAnswers: any[];\n    roomId: number;\n}\n\ninterface SessionizeLink {\n    title: string;\n    url: string;\n    linkType: string;\n}\n\nexport interface SessionizeSpeaker {\n    id: string;\n    firstName: string;\n    lastName: string;\n    bio: string;\n    tagLine: string;\n    profilePicture: string;\n    isTopSpeaker: boolean;\n    links: SessionizeLink[];\n    sessions: number[];\n    fullName: string;\n    categoryItems: any[];\n    questionAnswers: any[];\n}\n\ninterface SessionizeItem {\n    id: number;\n    name: string;\n    sort: number;\n}\n\ninterface SessionizeCategory {\n    id: number;\n    title: string;\n    items: SessionizeItem[];\n    sort: number;\n}\n\ninterface SessionizeRoom {\n    id: number;\n    name: string;\n    sort: number;\n}\n\nexport interface SessionizeEvent {\n    sessions: SessionizeSession[];\n    speakers: SessionizeSpeaker[];\n    questions: any[];\n    categories: SessionizeCategory[];\n    rooms: SessionizeRoom[];\n}\n\nconst loadStoredData = (id: string): SessionizeEvent | undefined => {\n    const sessionData = window.sessionStorage.getItem(`event${id}`)\n    if (sessionData) {\n        try {\n           return JSON.parse(sessionData) as SessionizeEvent\n        } catch {\n            alert('Oh no! Something has gone horribly wrong. Please close and reopen your browser and try again.')\n            return undefined\n        }\n    }\n    \n    return undefined\n}\n\nexport const loadSessionizeData = async (eventId: string): Promise<SessionizeEvent | undefined> => {\n    let result: SessionizeEvent | undefined\n\n    const existingData = loadStoredData(eventId)\n    if (existingData) {\n        return existingData\n    }\n\n    if (navigator.onLine) {\n        try {\n            const response = await fetch(`https://sessionize.com/api/v2/${eventId}/view/all`)\n            if (response.ok) {\n                result = await response.json() as SessionizeEvent\n                window.sessionStorage.setItem(`event${eventId}`, JSON.stringify(result))\n            }\n        } catch {\n            alert('Oh no! Something has gone horribly wrong. Please reload your browser and try again.')\n        }\n    }\n\n    return result\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import feedback from \"./feedback\"\nimport event from \"./event\"\nimport sponsorBlock from \"./sponsorBlock\"\nimport speakerFeedback from \"./speakerFeedback\"\n\nif (typeof fetch === 'undefined') {\n    // eslint-disable-next-line no-alert\n    alert(\"Oh no 😢 We don't support your web browser. Please upgrade to a newer version!\")\n}\n\nevent()\nfeedback()\nsponsorBlock()\nspeakerFeedback()","import { addPopupHandler, getTemplate, setText } from './common'\nimport { SessionizeEvent, SessionizeSpeaker, loadSessionizeData } from './sessionize'\n\nexport default async () => {\n    const agendaPlaceholder = document.getElementById('agenda')\n\n    if (!agendaPlaceholder) {\n        return\n    }\n\n    const eventId = agendaPlaceholder.getAttribute('data-event-id')\n\n    if (!eventId) {\n        return\n    }\n\n    let eventData: SessionizeEvent | undefined\n\n    const toggleUI = () => {\n        document.querySelectorAll('.agenda-row-style-loading').forEach((element) => {\n            const div = element as HTMLDivElement\n            div.style.display = 'none'\n        })\n\n        document.querySelectorAll('.agenda > .hidden-row').forEach((element) => {\n            const div = element as HTMLDivElement\n            div.style.display = 'grid'\n        })\n    }\n\n    const getSpeakerInfo = (sessionSpeakers: Array<string>) => {\n        return eventData!.speakers.filter((s: SessionizeSpeaker) => sessionSpeakers.indexOf(s.id) >= 0)\n    }\n\n    const seperatorSet = [\"🔹\"]\n\n    const speakerSubtitle = (sessionSpeakers: Array<string>): string => {\n        const speakers = getSpeakerInfo(sessionSpeakers)\n\n        if (speakers.length === 1) {\n            const speaker = speakers[0]\n            let country = ''\n            if (speaker.categoryItems.indexOf(204593) >= 0) {\n                country = 'South Africa'\n            } else {\n                debugger\n                country = speaker.questionAnswers.find(i => i.questionId === 59078)?.answerValue\n            }\n\n            let pronoun = ''\n            if (speaker.categoryItems.indexOf(204689) >= 0) {\n                pronoun = 'He/Him'\n            }\n\n            if (speaker.categoryItems.indexOf(204687) >= 0) {\n                pronoun = 'She/Her'\n            }\n\n            if (speaker.categoryItems.indexOf(204688) >= 0) {\n                pronoun = 'They/Them'\n            }\n\n            const seperator = seperatorSet[Math.floor(Math.random() * seperatorSet.length)]\n\n            if (pronoun) {\n                return `${pronoun} ${seperator} ${country}`\n            } else {\n                return country\n            }\n        }\n\n        return \"\"\n    }\n\n    const multipleSpeakerNames = (sessionSpeakers: Array<string>): string => {\n        const remappedSpeakers = getSpeakerInfo(sessionSpeakers).map((s: SessionizeSpeaker) => s.fullName)\n\n        if (remappedSpeakers.length === 1) {\n            return remappedSpeakers[0]\n        }\n\n        return `${remappedSpeakers.filter((_, index) => index < remappedSpeakers.length - 1).join(', ')} & ${remappedSpeakers[remappedSpeakers.length - 1]}`\n    }\n\n    const getSpeakerBio = (sessionSpeakers: Array<string>): string => {\n        const remappedSpeakers = getSpeakerInfo(sessionSpeakers).map((s) => s.bio)\n\n        if (remappedSpeakers.length === 1) {\n            return remappedSpeakers[0]\n        }\n\n        return remappedSpeakers.join(' <hr/> ')\n    }\n\n    const otherSpeakerImages = (sessionSpeakers: Array<string>): Array<string> => {\n        const remappedSpeakers = getSpeakerInfo(sessionSpeakers).map((s) => s.profilePicture)\n\n        if (remappedSpeakers.length === 1) {\n            return []\n        }\n\n        return remappedSpeakers.slice(1)\n    }\n\n    const singleSpeaker = (sessionSpeakers: Array<string>) => getSpeakerInfo(sessionSpeakers)[0]\n\n    const singleSpeakerImage = (sessionSpeakers: Array<string>): string => singleSpeaker(sessionSpeakers).profilePicture\n\n    const buildSocialBadges = (speaker: SessionizeSpeaker) => {\n        const result: Array<HTMLAnchorElement> = []\n        speaker.links.forEach((link) => {\n            const aTag = document.createElement('a')\n            aTag.target = '_blank'\n            aTag.href = link.url\n            const image = document.createElement('img')\n            image.alt = link.title\n            switch (link.title) {\n                case 'Twitter': {\n                    image.src = '/public/images/icons8-twitter-50.png'\n                    break\n                }\n                case 'LinkedIn': {\n                    image.src = '/public/images/icons8-linkedin-50.png'\n                    break\n                }\n                case 'Blog': {\n                    image.src = '/public/images/icons8-website-50.png'\n                    break\n                }\n                default: {\n                    image.src = '/public/images/icons8-external-link-50.png'\n                    break\n                }\n            }\n            aTag.appendChild(image)\n            result.push(aTag)\n        })\n\n        return result\n    }\n\n    const getSession = (sessionId: String) => eventData!.sessions.filter((session) => session.id === sessionId)[0]\n\n    const speakerImageCreator = (src: string, hide = false): HTMLImageElement => {\n        const imageElement = document.createElement('img')\n        imageElement.src = src\n        imageElement.classList.add('speaker-image')\n        if (hide) {\n            imageElement.classList.add('hide')\n        }\n        return imageElement\n    }\n\n    const buildMuliSpeakerImageBlock = (primaryImage: string, otherImages: string[], isLargePopupImage = false): HTMLDivElement => {\n        const imagesHolder = document.createElement('div')\n        imagesHolder.setAttribute('x-imageset', '')\n        imagesHolder.classList.add('multi-speaker-container')\n        const firstImage = speakerImageCreator(primaryImage)\n        firstImage.classList.add('multi-speaker-image')\n        if (isLargePopupImage) {\n            firstImage.classList.add('largePopupImage')\n        }\n\n        imagesHolder.appendChild(firstImage)\n\n        otherImages.forEach((otherSpeaker) => {\n            const nextImage = speakerImageCreator(otherSpeaker, true)\n            nextImage.classList.add('multi-speaker-image')\n            if (isLargePopupImage) {\n                nextImage.classList.add('largePopupImage')\n            }\n\n            imagesHolder.appendChild(nextImage)\n        })\n\n        return imagesHolder\n    }\n\n    const addPopups = () => {\n        addPopupHandler(document.querySelectorAll('.agenda-session'), (div) => {\n            const dataSlotId = div.attributes['data-slot-id'].value\n            if (!dataSlotId && dataSlotId === '0') {\n                return null\n            }\n\n            const matchedSession = getSession(dataSlotId)\n\n            if (matchedSession) {\n                const speakerInfo = singleSpeaker(matchedSession.speakers)\n                const socialLinks = getSpeakerInfo(matchedSession.speakers).flatMap((s) => buildSocialBadges(s))\n                const contentNode = getTemplate('popupBioContent')\n                const bioContent = contentNode.firstElementChild!\n                const otherImages = otherSpeakerImages(matchedSession.speakers)\n                if (otherImages.length > 0) {\n                    const imageElement = bioContent.querySelector('img.largePopupImage')!!\n                    imageElement.classList.add('hide')\n                    const multiImageElement = buildMuliSpeakerImageBlock(speakerInfo.profilePicture, otherImages, true)\n                    imageElement.insertAdjacentElement('afterend', multiImageElement)\n                } else {\n                    const imageElement = (bioContent.querySelector('img.largePopupImage')! as HTMLImageElement)\n                    imageElement.src = speakerInfo.profilePicture\n                }\n\n                setText(bioContent, 'div.bio-speaker', multipleSpeakerNames(matchedSession.speakers))\n                setText(bioContent, 'div.bio-subtitle', speakerSubtitle(matchedSession.speakers))\n                const socialLinkPlaceholder = (bioContent.querySelector('div.bio-social')! as HTMLDivElement)\n                socialLinks.forEach((link) => {\n                    socialLinkPlaceholder.appendChild(link)\n                })\n\n                const bio = getSpeakerBio(matchedSession.speakers)\n                if (otherImages.length === 0) {\n                    setText(bioContent, 'div.bio-tagline', speakerInfo.tagLine)\n                }\n\n                setText(bioContent, 'div.bio-title', matchedSession.title)\n                setText(bioContent, 'div.bio-talk-description', matchedSession.description)\n                setText(bioContent, 'div.bio-speaker-bio', bio)\n                return bioContent\n            } else {\n                return null;\n            }\n        }, 'clickable-session', 'unclickable-session', undefined, (div) => {\n            const speakerId = div.attributes[\"speaker-id\"].value\n            if (speakerId) {\n                const matchedSession = getSession(speakerId)\n                if (matchedSession) {\n                    const speakerInfo = singleSpeaker(matchedSession.speakers)\n                    window.currentSpeaker = {\n                        name: speakerInfo.fullName,\n                        id: speakerId\n                    }\n                }\n            }\n        })\n    }\n\n    const fadeOut = (element: HTMLElement) => {\n        let opacity = 1 // initial opacity\n        const decrease = () => {\n            if (opacity <= 0.1) {\n                element.classList.add('hide')\n                return\n            }\n\n            element.style.opacity = opacity.toString()\n            opacity -= opacity * 0.025\n            requestAnimationFrame(decrease)\n        }\n\n        decrease()\n    }\n\n    const fadeIn = (element: HTMLElement) => {\n        let opacity = 0.1 // initial opacity\n        element.classList.remove('hide')\n        const increase = () => {\n            if (opacity >= 1) {\n                return\n            }\n\n            element.style.opacity = opacity.toString()\n            opacity += opacity * 0.025\n            requestAnimationFrame(increase)\n        }\n\n        increase()\n    }\n\n    const rotateImages = () => {\n        setInterval(() => {\n            const imageSets = Array.from(document.querySelectorAll('div[x-imageSet]'))\n            imageSets.forEach((imageSet) => {\n                const images: NodeListOf<HTMLImageElement> = imageSet.querySelectorAll('img')\n                const currentImageIndex = Array.from(images).findIndex((i) => !i.classList.contains('hide'))\n                fadeOut(images[currentImageIndex])\n                let next = currentImageIndex + 1\n                if (next >= images.length) {\n                    next = 0\n                }\n\n                fadeIn(images[next])\n            })\n        }, 3500)\n    }\n\n    const parseEventData = () => {\n        document.querySelectorAll('.agenda-session').forEach((element) => {\n            const div = element as HTMLDivElement\n            const dataSlotId = div.attributes['data-slot-id'].value\n            if (dataSlotId === '999999') {\n                const tbaTemplate = getTemplate('noSessionCardTemplate').querySelector('div')\n                div.insertAdjacentElement('beforeend', tbaTemplate!)\n            } else {\n                const matchedSession = getSession(dataSlotId)\n\n                if (!matchedSession) {\n                    const tbaTemplate = getTemplate('tbaCardTemplate').querySelector('div')\n                    div.insertAdjacentElement('beforeend', tbaTemplate!)\n                } else {\n                    const templateDivs = getTemplate('sessionCardTemplate').querySelectorAll('div')\n                    templateDivs.forEach((templateElement) => {\n                        switch (templateElement.className) {\n                            case 'agenda-session-image': {\n                                const otherImages = otherSpeakerImages(matchedSession.speakers)\n                                if (otherImages.length > 0) {\n                                    const imagesHolder = buildMuliSpeakerImageBlock(singleSpeakerImage(matchedSession.speakers), otherImages)\n                                    templateElement.appendChild(imagesHolder)\n                                } else {\n                                    templateElement.appendChild(speakerImageCreator(singleSpeakerImage(matchedSession.speakers)))\n                                }\n\n                                break\n                            }\n                            case 'agenda-session-subtitle': {\n                                templateElement.innerText = speakerSubtitle(matchedSession.speakers)\n                                break;\n                            }\n                            case 'agenda-session-name': {\n                                templateElement.innerText = multipleSpeakerNames(matchedSession.speakers)\n                                break\n                            }\n                            case 'agenda-session-title': {\n                                templateElement.innerText = matchedSession.title\n                                break\n                            }\n                        }\n\n                        div.insertAdjacentElement('beforeend', templateElement)\n                    })\n                }\n            }\n        })\n\n        addPopups()\n        toggleUI()\n        rotateImages()\n    }\n\n    eventData = await loadSessionizeData(eventId)\n    if (!eventData) {\n        return\n    }\n\n    parseEventData()\n\n    const requestedSpeakerId = new URLSearchParams(window.location.search).get(\"currentSpeaker\")\n    if (requestedSpeakerId) {\n        const speakerButton = document.querySelector(`div[data-slot-id=\"${requestedSpeakerId}\"]`) as HTMLElement\n        speakerButton.click()\n    }\n}\n","import { addPopupHandler, feedbackServerUrl, getTemplate, setText } from './common'\nimport { loadSessionizeData } from './sessionize'\nimport { v4 as uuidv4 } from 'uuid'\n\ninterface QuestionStructure {\n    id: string,\n    label: string,\n    type: 'rate' | 'text' | 'timeslot-selector' | 'yesno' | 'role' | 'level' | 'years' | 'email' | 'influence'\n    key: number | undefined,\n    needs?: string,\n}\n\ninterface SectionStructure {\n    title: string,\n    subtitle?: string,\n    questions: QuestionStructure[]\n    workshop?: number,\n}\n\ninterface QuestionaireStructure {\n    structure: SectionStructure[],\n}\n\nconst tracks = 5\n\nexport default async () => {\n    const stage = document.getElementById('feedbackStage') as HTMLDivElement\n    if (!stage) {\n        return\n    }\n\n    let questions: QuestionaireStructure\n    const storedQuestions = window.sessionStorage.getItem('questionStructure')\n    if (storedQuestions) {\n        questions = JSON.parse(storedQuestions)\n    } else {\n        const questionsResponse = await fetch('/public/ratingconfig.json')\n        if (!questionsResponse.ok) {\n            return\n        } else {\n            questions = await questionsResponse.json()\n            window.sessionStorage.setItem('questionStructure', JSON.stringify(questions))\n        }\n    }\n\n\n    const ratingId = stage.getAttribute('data-rating-id');\n    if (!ratingId) {\n        return\n    }\n\n    const eventId = stage.getAttribute('data-event-id')\n    if (!eventId) {\n        return\n    }\n\n    const sessionStructure = document.getElementById('sessionData')!.innerText.trim().split(' ')\n    const eventData = await loadSessionizeData(eventId)\n\n    const workshopStructure = document.getElementById('workshopData')!.innerText.trim().split(';;;').map(s => s.trim())\n\n    const ratingStoredData = window.localStorage.getItem(`rating${ratingId}`)\n    let ratingData\n    if (!ratingStoredData) {\n        ratingData = {\n            event: ratingId,\n            submitter: uuidv4(),\n        }\n    } else {\n        ratingData = JSON.parse(ratingStoredData)\n    }\n\n    const talkTitle = (sessionId: string): string => {\n        const session = eventData!.sessions.find((s) => s.id === sessionId)\n        if (!session) {\n            return \"To Be Announced\";\n        }\n\n        const speakers = session.speakers\n            .map((speakerId) => eventData!.speakers.find((speaker) => speaker?.id === speakerId))\n            .filter((speaker) => !!speaker)\n            .map((speaker) => speaker?.fullName)\n            .join(' and ');\n        \n        return `${session.title} by ${speakers}`\n    }\n\n    const setValue = (dataSlotId: number, id: string, value: string) => {\n        if (!ratingData[`s${dataSlotId}`]) {\n            ratingData[`s${dataSlotId}`] = {}\n        }\n\n        ratingData[`s${dataSlotId}`][id] = value\n\n        window.localStorage.setItem(`rating${ratingId}`, JSON.stringify(ratingData))\n    }\n\n    const configureTimeSlotSelector = (inputElement: HTMLSelectElement, question: QuestionStructure, dataSlotId: number) => {\n        const start = question.key! * tracks + 1\n        const end = start + tracks\n\n        for (let index = start; index < end; index++) {\n            const sessionId = sessionStructure[index]\n            if (sessionId === '999999') {\n                continue\n            }\n\n            const option = document.createElement('option')\n\n            option.value = sessionId\n            option.text = talkTitle(sessionId)\n\n            inputElement!.append(option)\n        }\n\n        const updateTimeSlot = () => {\n            setValue(dataSlotId, question.id, inputElement.value)\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            inputElement.querySelectorAll('option').forEach((option) => {\n                if (option.value === existingValue) {\n                    option.selected = true\n                }\n            })\n        }\n\n        inputElement.onchange = updateTimeSlot\n    }\n\n    const configureSelector = (inputElement: HTMLSelectElement, question: QuestionStructure, dataSlotId: number) => {\n        const updateValue = () => {\n            setValue(dataSlotId, question.id, inputElement.value)\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            inputElement.querySelectorAll('option').forEach((option) => {\n                if (option.value === existingValue) {\n                    option.selected = true\n                }\n            })\n        }\n\n        inputElement.onchange = updateValue\n    }\n\n    const configureYesNo = (inputElement: HTMLDivElement, question: QuestionStructure, dataSlotId: number) => {\n        const updateTimeSlot = () => {\n            const value = (inputElement.querySelector('input[name=\"yesno\"]:checked') as HTMLInputElement)?.value\n            if (value) {\n                setValue(dataSlotId, question.id, value)\n            }\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            (inputElement.querySelector(`input[name=\"yesno\"][value=\"${existingValue}\"]`) as HTMLInputElement).checked = true\n        }\n\n        inputElement.onchange = updateTimeSlot\n    }\n\n    const configureRating = (inputElement: HTMLDivElement, question: QuestionStructure, dataSlotId: number) => {\n        const ratingElement = (inputElement.querySelector('input[type=\"range\"]') as HTMLInputElement)\n        const updateValue = () => {\n            console.log('update')\n            const value = ratingElement.value\n            if (value) {\n                setValue(dataSlotId, question.id, value)\n            }\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            ratingElement.value = existingValue\n        }\n\n        ratingElement.oninput = updateValue\n    }\n\n    const configureInput = (inputElement: HTMLInputElement, question: QuestionStructure, dataSlotId: number) => {\n        const updateValue = () => {\n            const { value } = inputElement\n            if (value) {\n                setValue(dataSlotId, question.id, value)\n            }\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            inputElement.value = existingValue\n        }\n\n        inputElement.onchange = updateValue\n    }\n\n    const configureText = (inputElement: HTMLTextAreaElement, question: QuestionStructure, dataSlotId: number) => {\n        const updateValue = () => {\n            const { value } = inputElement\n            if (value) {\n                setValue(dataSlotId, question.id, value)\n            }\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            inputElement.value = existingValue\n        }\n\n        inputElement.onchange = updateValue\n    }\n\n    const configureYears = (inputElement: HTMLInputElement, question: QuestionStructure, dataSlotId: number) => {\n        const updateValue = () => {\n            const { value } = inputElement\n            if (value) {\n                let valueAsNumber: number | undefined = undefined\n                try {\n                    valueAsNumber = +value\n                } catch { }\n\n                if (valueAsNumber && valueAsNumber >= 0 && valueAsNumber <= 60) {\n                    setValue(dataSlotId, question.id, value)\n                }\n            }\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            inputElement.value = existingValue\n        }\n\n        inputElement.onchange = updateValue\n    }\n\n    const needsNotMet = ['no', 'none']\n\n    const countComplete = (id: number): number => {\n        const answers = ratingData[`s${id}`] || {}\n        return Object.keys(answers).filter(key => {\n            const questionStructure = questions.structure[id].questions.find(q => q.id === key)\n            if (!questionStructure) {\n                return false\n            }\n            \n            const answeredValue = answers[key]\n            if (questionStructure.type === 'timeslot-selector' && answeredValue === 'none') {\n                return false\n            } \n\n            const needs = questionStructure.needs\n            if (!needs) {\n                return true\n            }\n\n            const needsValue = answers[needs]\n            if (!needsValue) {\n                return true\n            }\n\n            return !needsNotMet.find(n => n === needsValue)\n        }).length\n    }\n\n    const updateCompleted = () => {\n        document.querySelectorAll('div.feedbackButton').forEach((button) => {\n            const id = +button.attributes['data-id'].value\n            setText(button, '.feedbackButtonProgressBar', `Questions Completed ${countComplete(id)} / ${questions.structure[id].questions.length}`)\n        })\n    }\n\n    const addPopups = () => {\n        addPopupHandler(document.querySelectorAll('.feedbackButton'), (div) => {\n            const dataSlotId = +div.attributes['data-id'].value\n            const popupContent = getTemplate('feedbackPopup').firstElementChild!\n            const section = questions.structure[dataSlotId]\n            setText(popupContent, 'div.feedbackTitle', `Feedback for ${section.title}`)\n            section.questions.forEach((question) => {\n                const questionBaseElement = getTemplate('questionTemplate').firstElementChild!\n                setText(questionBaseElement, 'div.questionTitle', question.label)\n\n                const inputElement = getTemplate(`${question.type}QuestionStyleTemplate`).firstElementChild!\n\n                switch (question.type) {\n                    case 'email': {\n                        configureInput(inputElement as HTMLInputElement, question, dataSlotId)\n                        break\n                    }\n                    case 'level':\n                    case 'role':\n                    case 'influence': {\n                        configureSelector(inputElement as HTMLSelectElement, question, dataSlotId)\n                        break\n                    }\n                    case 'text': {\n                        configureText(inputElement as HTMLTextAreaElement, question, dataSlotId)\n                        break\n                    }\n                    case 'rate': {\n                        configureRating(inputElement as HTMLDivElement, question, dataSlotId)\n                        break\n                    }\n                    case 'yesno': {\n                        configureYesNo(inputElement as HTMLDivElement, question, dataSlotId)\n                        break\n                    }\n                    case 'years': {\n                        configureYears(inputElement as HTMLInputElement, question, dataSlotId)\n                        break\n                    }\n                    case 'timeslot-selector': {\n                        configureTimeSlotSelector(inputElement as HTMLSelectElement, question, dataSlotId)\n                        break\n                    }\n                }\n\n                inputElement.attributes['data-rating-field-id'] = question.id\n                questionBaseElement.insertAdjacentElement('beforeend', inputElement)\n                popupContent.insertAdjacentElement('beforeend', questionBaseElement)\n            })\n\n            const doneButton = getTemplate('doneButton').firstElementChild! as HTMLButtonElement\n            doneButton.onclick = () => {\n                (document.querySelector('div.popupClose')! as HTMLDivElement).dispatchEvent(new Event('click'))\n            }\n            popupContent.insertAdjacentElement('beforeend', doneButton)\n            return popupContent\n        }, undefined, undefined, () => {\n            updateCompleted()\n        }, (content) => {\n            content.querySelectorAll('input[type=\"range\"]').forEach(i => {\n                i.dispatchEvent(new Event('input'))\n            })\n        })\n    }\n\n    const addSubmit = () => {\n        const saveButton = (document.getElementById('saveDataButton') as HTMLButtonElement)\n        saveButton.onclick = (event) => {\n            saveButton.innerText = 'Saving...';\n            saveButton.disabled = true\n            event.preventDefault()\n            // eslint-disable-next-line no-undef\n            grecaptcha.ready(async () => {\n                // eslint-disable-next-line no-undef\n                const token = await grecaptcha.execute('6LfkPcUlAAAAAHwYs14fkTiEZYsu5hAAq_bLKp-j', { action: 'submit' })\n                ratingData.captcha = token\n                const uploadResult = await fetch(feedbackServerUrl, {\n                    method: 'POST',\n                    body: JSON.stringify(ratingData),\n                })\n\n                if (!uploadResult.ok) {\n                    saveButton.innerText = 'Save';\n                    saveButton.disabled = false\n                    alert('Oh no! Something has gone horribly wrong. Please reload your browser and try again.')\n                } else {\n                    saveButton.disabled = false\n                    saveButton.innerText = 'Save Complete';\n                    setTimeout(() => {\n                        saveButton.innerText = 'Save';\n                    }, 2000)\n                }\n            })\n        }\n\n        saveButton.style.display = 'unset'\n    }\n\n    const addButtons = () => {\n        stage.removeChild(document.getElementById('feedbackLoading')!)\n        questions.structure.forEach((question, index) => {\n            let show = false\n            let subTitle: string | undefined = undefined\n            if (question.workshop !== undefined) {\n                const workshopTitle = workshopStructure[question.workshop]\n                if (workshopTitle !== 'none') {\n                    show = true\n                    subTitle = workshopTitle\n                }\n            } else {\n                if (question.subtitle) {\n                    subTitle = question.subtitle\n                }\n\n                show = true\n            }\n\n            if (show) {\n                const questionButton = getTemplate('feedbackButton').querySelector('div')!\n                questionButton.setAttribute('data-id', index.toString())\n                setText(questionButton, '.feedbackButtonTitle', question.title)\n                setText(questionButton, '.feedbackButtonProgressBar', `Questions Completed ${countComplete(index)} / ${question.questions.length}`)\n                if (subTitle) {\n                    setText(questionButton, '.feedbackButtonWorkshop', subTitle)\n                }\n\n                stage.insertAdjacentElement('beforeend', questionButton)\n            }\n        })\n    }\n\n    addButtons()\n    addPopups()\n    addSubmit()\n}\n","export default () => {\n    const sponsorBlock = document.getElementsByClassName('sponsor-content-detail-wide-body')[0];\n    if (!sponsorBlock) {\n        return\n    }\n\n    let sponsorPosition = 0\n\n    setInterval(() => {\n        sponsorPosition += 0.25\n        if (sponsorPosition > sponsorBlock.scrollWidth) {\n            sponsorPosition = 0\n        }\n        \n        sponsorBlock.scrollTo(sponsorPosition, 0);\n    }, 10)\n}\n","import { feedbackServerUrl, getTemplate } from \"./common\";\n\ninterface EventData {\n    event: string;\n    feedback: Feedback[];\n}\n\ninterface Feedback {\n    feedback?: string;\n    ratingPresentation: number;\n    ratingContent: number;\n    ratingValue: number;\n}\n\n\nexport default () => {\n    const target = document.getElementById('speakerFeedbackReport') as HTMLDivElement\n    if (!target) {\n        return\n    }\n\n    const speakerKeyElement = (document.getElementById('speakerKey') as HTMLInputElement)!\n\n    const comparedValue = (speakerScore: number, average: number | undefined): string => {\n        const avgValue = (average || 0)\n        if (avgValue === 0) {\n            return avgValue.toFixed(2);\n        }\n\n        let symbol = ''\n        if (speakerScore > avgValue) {\n            symbol = '↑'\n        }\n\n        if (speakerScore < avgValue) {\n            symbol = '↓'\n        }\n\n        return `${avgValue.toFixed(2)} ${symbol}`\n    }\n\n    const showData = (data: EventData[], averages) => {\n        target.innerHTML = ''\n        data.forEach(event => {\n            const title = getTemplate('title')!.firstElementChild as HTMLDivElement\n            title.innerText = event.event\n            target.insertAdjacentElement('beforeend', title)\n\n            const feedbackTable = getTemplate('feedbackTable')!.firstElementChild as HTMLTableElement\n\n            const feedbackTotals = event.feedback.reduce((acc, nextValue) => {\n                acc.presSum += nextValue.ratingPresentation\n                acc.contentSum += nextValue.ratingContent\n                acc.valueSum += nextValue.ratingValue\n                return acc\n            }, { presSum: 0, contentSum: 0, valueSum: 0 });\n\n            const presAvg = (feedbackTotals.presSum / event.feedback.length);\n            const contentAvg = (feedbackTotals.contentSum / event.feedback.length);\n            const valueAvg = (feedbackTotals.valueSum / event.feedback.length);\n\n            (feedbackTable.querySelector('#presAvg') as HTMLTableCellElement).innerText = presAvg.toFixed(2);\n            (feedbackTable.querySelector('#contentAvg') as HTMLTableCellElement).innerText = contentAvg.toFixed(2);\n            (feedbackTable.querySelector('#valueAvg') as HTMLTableCellElement).innerText = valueAvg.toFixed(2);\n\n            if (averages.length > 0) {\n                const average = averages[0];\n                (feedbackTable.querySelector('#timeslotPresAvg') as HTMLTableCellElement).innerText = comparedValue(presAvg, average[`${event.event}-ratingPresentationtimeslot`]);\n                (feedbackTable.querySelector('#timeslotContentAvg') as HTMLTableCellElement).innerText = comparedValue(contentAvg, average[`${event.event}-ratingContenttimeslot`]);\n                (feedbackTable.querySelector('#timeslotValueAvg') as HTMLTableCellElement).innerText = comparedValue(valueAvg, average[`${event.event}-ratingValuetimeslot`]);\n\n                (feedbackTable.querySelector('#eventPresAvg') as HTMLTableCellElement).innerText = comparedValue(presAvg, average[`${event.event}-ratingPresentation`]);\n                (feedbackTable.querySelector('#eventContentAvg') as HTMLTableCellElement).innerText = comparedValue(contentAvg, average[`${event.event}-ratingContent`]);\n                (feedbackTable.querySelector('#eventValueAvg') as HTMLTableCellElement).innerText = comparedValue(valueAvg, average[`${event.event}-ratingValue`]);\n\n                (feedbackTable.querySelector('#globalPresAvg') as HTMLTableCellElement).innerText = comparedValue(presAvg, average['global-ratingPresentation']);\n                (feedbackTable.querySelector('#globalContentAvg') as HTMLTableCellElement).innerText = comparedValue(contentAvg, average['global-ratingContent']);\n                (feedbackTable.querySelector('#globalValueAvg') as HTMLTableCellElement).innerText = comparedValue(valueAvg, average['global-ratingValue']);\n            } else {\n                feedbackTable.querySelectorAll('.additionalAverageInfo').forEach(item => { \n                    console.log('sdd');\n                    (item as HTMLTableRowElement).style.display = 'none'; \n                });\n            }\n\n            const footerRow = (feedbackTable.querySelector('#feedbackFooter') as HTMLTableRowElement)\n            event.feedback.forEach((f) => {\n                const row = getTemplate('feedbackRow')!.firstElementChild as HTMLTableRowElement\n                (row.querySelector('.presValue') as HTMLTableCellElement).innerText = f.ratingPresentation.toFixed(0);\n                (row.querySelector('.contentValue') as HTMLTableCellElement).innerText = f.ratingContent.toFixed(0);\n                (row.querySelector('.valueValue') as HTMLTableCellElement).innerText = f.ratingValue.toFixed(0);\n                (row.querySelector('.feedbackValue') as HTMLTableCellElement).innerText = f.feedback || ''\n\n                footerRow.insertAdjacentElement('beforebegin', row)\n            })\n\n            target.insertAdjacentElement('beforeend', feedbackTable)\n        })\n    }\n\n    const addButton = () => {\n        const button = document.getElementById('getDataButton') as HTMLButtonElement\n        if (!button) {\n            return\n        }\n\n        button.onclick = async () => {\n            button.disabled = true\n            button.innerText = 'Loading...'\n            const key = speakerKeyElement.value\n            const data = await fetch(`${feedbackServerUrl}?speaker=${key}`)\n            if (data.ok) {\n                const dataSet = await data.json() as Array<any>;\n                const averages = dataSet.filter(row => !row.event)\n                showData(dataSet.filter(row => row.event) as EventData[], averages)\n                window.localStorage.setItem('speakerFeedbackKey', key)\n            }\n\n            button.disabled = false\n            button.innerText = 'Get Report'\n        }\n    }\n\n    const preloadSpeakerKey = () => {\n        const speakerKey = window.localStorage.getItem('speakerFeedbackKey')\n        if (speakerKey) {\n            speakerKeyElement.value = speakerKey\n        }\n    }\n\n    addButton()\n    preloadSpeakerKey()\n}"],"names":["feedbackServerUrl","getTemplate","templateId","document","getElementById","cloneNode","content","setText","parent","query","value","querySelector","innerText","addPopupHandler","elementsToAddPopupTo","popupContentBuilder","clickableClass","unclickableClass","onCloseHandler","onOpenHandler","closePopup","window","currentSpeaker","undefined","classList","add","removeEventListener","handleCloseKeyPress","contentToRemove","parentNode","removeChild","call","event","key","onclick","async","shareData","title","name","text","url","location","origin","pathname","id","navigator","share","backdrop","addEventListener","forEach","div","popupContent","remove","popupContentStage","dataSlotId","attributes","setAttribute","querySelectorAll","insertAdjacentElement","loadSessionizeData","eventId","result","existingData","sessionData","sessionStorage","getItem","JSON","parse","alert","loadStoredData","onLine","response","fetch","ok","json","setItem","stringify","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","options","buf","offset","rnds","random","arr","unsafeStringify","agendaPlaceholder","getAttribute","eventData","getSpeakerInfo","sessionSpeakers","speakers","filter","s","indexOf","seperatorSet","speakerSubtitle","length","speaker","country","categoryItems","questionAnswers","find","questionId","answerValue","pronoun","seperator","Math","floor","multipleSpeakerNames","remappedSpeakers","map","fullName","_","index","join","otherSpeakerImages","profilePicture","singleSpeaker","singleSpeakerImage","getSession","sessionId","sessions","session","speakerImageCreator","src","hide","imageElement","createElement","buildMuliSpeakerImageBlock","primaryImage","otherImages","isLargePopupImage","imagesHolder","firstImage","appendChild","otherSpeaker","nextImage","element","tbaTemplate","matchedSession","templateElement","className","speakerInfo","socialLinks","flatMap","links","link","aTag","target","href","image","alt","buildSocialBadges","bioContent","firstElementChild","multiImageElement","socialLinkPlaceholder","bio","getSpeakerBio","tagLine","description","speakerId","style","display","setInterval","Array","from","imageSet","images","currentImageIndex","findIndex","contains","opacity","decrease","requestAnimationFrame","fadeOut","next","increase","fadeIn","requestedSpeakerId","URLSearchParams","search","get","click","stage","questions","storedQuestions","questionsResponse","ratingId","sessionStructure","trim","split","workshopStructure","ratingStoredData","localStorage","ratingData","submitter","talkTitle","setValue","needsNotMet","countComplete","answers","Object","keys","questionStructure","structure","q","answeredValue","type","needs","needsValue","n","question","subTitle","show","workshop","workshopTitle","subtitle","questionButton","section","questionBaseElement","label","inputElement","existingValue","onchange","configureInput","option","selected","configureSelector","configureText","ratingElement","oninput","console","log","configureRating","checked","configureYesNo","valueAsNumber","configureYears","start","end","append","configureTimeSlotSelector","doneButton","dispatchEvent","Event","button","saveButton","disabled","preventDefault","grecaptcha","ready","token","execute","action","captcha","method","body","setTimeout","addSubmit","feedback","sponsorBlock","getElementsByClassName","sponsorPosition","scrollWidth","scrollTo","speakerKeyElement","comparedValue","speakerScore","average","avgValue","toFixed","symbol","data","dataSet","averages","row","innerHTML","feedbackTable","feedbackTotals","reduce","acc","nextValue","presSum","ratingPresentation","contentSum","ratingContent","valueSum","ratingValue","presAvg","contentAvg","valueAvg","item","footerRow","f","showData","addButton","speakerKey","preloadSpeakerKey","speakerFeedback"],"sourceRoot":""}