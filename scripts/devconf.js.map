{"version":3,"file":"devconf.js","mappings":"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","sources":["webpack://devconf/./src/common.ts","webpack://devconf/./src/sessionize.ts","webpack://devconf/./node_modules/uuid/dist/esm-browser/native.js","webpack://devconf/./node_modules/uuid/dist/esm-browser/rng.js","webpack://devconf/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://devconf/./node_modules/uuid/dist/esm-browser/v4.js","webpack://devconf/./src/devconf.ts","webpack://devconf/./src/event.ts","webpack://devconf/./src/feedback.ts","webpack://devconf/./src/sponsorBlock.ts","webpack://devconf/./src/speakerFeedback.ts"],"sourcesContent":["export const feedbackServerUrl = 'https://ratings-2slkxdorza-nw.a.run.app'\n// export const feedbackServerUrl = 'http://localhost:8080'\n\n\nexport const getTemplate = (templateId: string) => ((document.getElementById(templateId) as HTMLTemplateElement)\n    ?.cloneNode(true) as HTMLTemplateElement)\n    ?.content\n\nexport const setText = (parent: Element, query: string, value: string) => {\n    (parent.querySelector(query) as HTMLDivElement).innerText = value\n}\n\nexport const addPopupHandler = (\n    elementsToAddPopupTo: NodeListOf<HTMLDivElement>,\n    popupContentBuilder: (div: HTMLDivElement) => Element | null,\n    clickableClass?: string,\n    unclickableClass?: string,\n    onCloseHandler?: () => void,\n    onOpenHandler?: (content: Element) => void,\n) => {\n    const closePopup = () => {\n        document.querySelector('div.popupBackdrop')!.classList.add('popupBackdropHidden')\n        // eslint-disable-next-line no-use-before-define\n        document.removeEventListener('keydown', handleCloseKeyPress)\n        const contentToRemove = document.querySelector('div[data-popup-content=\"yes\"]')\n        contentToRemove?.parentNode?.removeChild(contentToRemove)\n        onCloseHandler?.call(this)\n    }\n\n    const handleCloseKeyPress = (event: KeyboardEvent) => {\n        if (event.key === 'Escape') {\n            closePopup()\n        }\n    }\n\n    const popupClose = document.querySelector('div.popupClose')! as HTMLDivElement\n    popupClose.onclick = () => {\n        closePopup()\n    }\n\n    const backdrop = document.querySelector('div.popupBackdropHidden')!\n    backdrop.addEventListener('click', closePopup)\n\n    elementsToAddPopupTo.forEach((div) => {\n        const popupContent = popupContentBuilder(div)\n        if (popupContent) {\n            if (clickableClass) {\n                div.classList.add(clickableClass)\n            }\n\n            div.onclick = () => {\n                backdrop.classList.remove('popupBackdropHidden')\n                document.addEventListener('keydown', handleCloseKeyPress)\n\n                const popupContentStage = document.querySelector('div.popupContent')!\n                popupContentStage.querySelectorAll('div.popupBio').forEach((value) => {\n                    popupContentStage.removeChild(value)\n                })\n\n                popupContent.setAttribute('data-popup-content', 'yes')\n                popupContentStage.insertAdjacentElement('beforeend', popupContent)\n                onOpenHandler?.call(this, popupContentStage)\n            }\n        } else {\n            if (unclickableClass) {\n                div.classList.add(unclickableClass)\n            }\n        }\n    })\n}\n","interface SessionizeSession {\n    id: string;\n    title: string;\n    description: string;\n    startsAt: Date;\n    endsAt: Date;\n    isServiceSession: boolean;\n    isPlenumSession: boolean;\n    speakers: string[];\n    categoryItems: number[];\n    questionAnswers: any[];\n    roomId: number;\n}\n\ninterface SessionizeLink {\n    title: string;\n    url: string;\n    linkType: string;\n}\n\nexport interface SessionizeSpeaker {\n    id: string;\n    firstName: string;\n    lastName: string;\n    bio: string;\n    tagLine: string;\n    profilePicture: string;\n    isTopSpeaker: boolean;\n    links: SessionizeLink[];\n    sessions: number[];\n    fullName: string;\n    categoryItems: any[];\n    questionAnswers: any[];\n}\n\ninterface SessionizeItem {\n    id: number;\n    name: string;\n    sort: number;\n}\n\ninterface SessionizeCategory {\n    id: number;\n    title: string;\n    items: SessionizeItem[];\n    sort: number;\n}\n\ninterface SessionizeRoom {\n    id: number;\n    name: string;\n    sort: number;\n}\n\nexport interface SessionizeEvent {\n    sessions: SessionizeSession[];\n    speakers: SessionizeSpeaker[];\n    questions: any[];\n    categories: SessionizeCategory[];\n    rooms: SessionizeRoom[];\n}\n\nconst loadStoredData = (id: string): SessionizeEvent | undefined => {\n    const sessionData = window.sessionStorage.getItem(`event${id}`)\n    if (sessionData) {\n        try {\n           return JSON.parse(sessionData) as SessionizeEvent\n        } catch {\n            alert('Oh no! Something has gone horribly wrong. Please close and reopen your browser and try again.')\n            return undefined\n        }\n    }\n    \n    return undefined\n}\n\nexport const loadSessionizeData = async (eventId: string): Promise<SessionizeEvent | undefined> => {\n    let result: SessionizeEvent | undefined\n\n    const existingData = loadStoredData(eventId)\n    if (existingData) {\n        return existingData\n    }\n\n    if (navigator.onLine) {\n        try {\n            const response = await fetch(`https://sessionize.com/api/v2/${eventId}/view/all`)\n            if (response.ok) {\n                result = await response.json() as SessionizeEvent\n                window.sessionStorage.setItem(`event${eventId}`, JSON.stringify(result))\n            }\n        } catch {\n            alert('Oh no! Something has gone horribly wrong. Please reload your browser and try again.')\n        }\n    }\n\n    return result\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import feedback from \"./feedback\"\nimport event from \"./event\"\nimport sponsorBlock from \"./sponsorBlock\"\nimport speakerFeedback from \"./speakerFeedback\"\n\nif (typeof fetch === 'undefined') {\n    // eslint-disable-next-line no-alert\n    alert(\"Oh no 😢 We don't support your web browser. Please upgrade to a newer version!\")\n}\n\nevent()\nfeedback()\nsponsorBlock()\nspeakerFeedback()","import { addPopupHandler, getTemplate, setText } from './common'\nimport { SessionizeEvent, SessionizeSpeaker, loadSessionizeData } from './sessionize'\n\nexport default async () => {\n    const agendaPlaceholder = document.getElementById('agenda')\n\n    if (!agendaPlaceholder) {\n        return\n    }\n\n    const eventId = agendaPlaceholder.getAttribute('data-event-id')\n\n    if (!eventId) {\n        return\n    }\n\n    let eventData: SessionizeEvent | undefined\n\n    const toggleUI = () => {\n        document.querySelectorAll('.agenda-row-style-loading').forEach((element) => {\n            const div = element as HTMLDivElement\n            div.style.display = 'none'\n        })\n\n        document.querySelectorAll('.agenda > .hidden-row').forEach((element) => {\n            const div = element as HTMLDivElement\n            div.style.display = 'grid'\n        })\n    }\n\n    const getSpeakerInfo = (sessionSpeakers: Array<string>) => {\n        return eventData!.speakers.filter((s: SessionizeSpeaker) => sessionSpeakers.indexOf(s.id) >= 0)\n    }\n\n    const multipleSpeakerNames = (sessionSpeakers: Array<string>): string => {\n        const remappedSpeakers = getSpeakerInfo(sessionSpeakers).map((s: SessionizeSpeaker) => s.fullName)\n\n        if (remappedSpeakers.length === 1) {\n            return remappedSpeakers[0]\n        }\n\n        return `${remappedSpeakers.filter((_, index) => index < remappedSpeakers.length - 1).join(', ')} & ${remappedSpeakers[remappedSpeakers.length - 1]}`\n    }\n\n    const getSpeakerBio = (sessionSpeakers: Array<string>): string => {\n        const remappedSpeakers = getSpeakerInfo(sessionSpeakers).map((s) => s.bio)\n\n        if (remappedSpeakers.length === 1) {\n            return remappedSpeakers[0]\n        }\n\n        return remappedSpeakers.join(' <hr/> ')\n    }\n\n    const otherSpeakerImages = (sessionSpeakers: Array<string>): Array<string> => {\n        const remappedSpeakers = getSpeakerInfo(sessionSpeakers).map((s) => s.profilePicture)\n\n        if (remappedSpeakers.length === 1) {\n            return []\n        }\n\n        return remappedSpeakers.slice(1)\n    }\n\n    const singleSpeaker = (sessionSpeakers: Array<string>) => getSpeakerInfo(sessionSpeakers)[0]\n\n    const singleSpeakerImage = (sessionSpeakers: Array<string>): string => singleSpeaker(sessionSpeakers).profilePicture\n\n    const buildSocialBadges = (speaker: SessionizeSpeaker) => {\n        const result: Array<HTMLAnchorElement> = []\n        speaker.links.forEach((link) => {\n            const aTag = document.createElement('a')\n            aTag.target = '_blank'\n            aTag.href = link.url\n            const image = document.createElement('img')\n            image.alt = link.title\n            switch (link.title) {\n                case 'Twitter': {\n                    image.src = '/public/images/icons8-twitter-50.png'\n                    break\n                }\n                case 'LinkedIn': {\n                    image.src = '/public/images/icons8-linkedin-50.png'\n                    break\n                }\n                case 'Blog': {\n                    image.src = '/public/images/icons8-website-50.png'\n                    break\n                }\n                default: {\n                    image.src = '/public/images/icons8-external-link-50.png'\n                    break\n                }\n            }\n            aTag.appendChild(image)\n            result.push(aTag)\n        })\n\n        return result\n    }\n\n    const getSession = (sessionId: String) => eventData!.sessions.filter((session) => session.id === sessionId)[0]\n\n    const speakerImageCreator = (src: string, hide = false): HTMLImageElement => {\n        const imageElement = document.createElement('img')\n        imageElement.src = src\n        imageElement.classList.add('speaker-image')\n        if (hide) {\n            imageElement.classList.add('hide')\n        }\n        return imageElement\n    }\n\n    const buildMuliSpeakerImageBlock = (primaryImage: string, otherImages: string[], isLargePopupImage = false): HTMLDivElement => {\n        const imagesHolder = document.createElement('div')\n        imagesHolder.setAttribute('x-imageset', '')\n        imagesHolder.classList.add('multi-speaker-container')\n        const firstImage = speakerImageCreator(primaryImage)\n        firstImage.classList.add('multi-speaker-image')\n        if (isLargePopupImage) {\n            firstImage.classList.add('largePopupImage')\n        }\n\n        imagesHolder.appendChild(firstImage)\n\n        otherImages.forEach((otherSpeaker) => {\n            const nextImage = speakerImageCreator(otherSpeaker, true)\n            nextImage.classList.add('multi-speaker-image')\n            if (isLargePopupImage) {\n                nextImage.classList.add('largePopupImage')\n            }\n\n            imagesHolder.appendChild(nextImage)\n        })\n\n        return imagesHolder\n    }\n\n    const addPopups = () => {\n        addPopupHandler(document.querySelectorAll('.agenda-session'), (div) => {\n            const dataSlotId = div.attributes['data-slot-id'].value\n            if (!dataSlotId && dataSlotId === '0') {\n                return null\n            }\n\n            const divDataSlotId = div.attributes['data-slot-id'].value\n            const matchedSession = getSession(divDataSlotId)\n\n            if (matchedSession) {\n                const speakerInfo = singleSpeaker(matchedSession.speakers)\n                const socialLinks = getSpeakerInfo(matchedSession.speakers).flatMap((s) => buildSocialBadges(s))\n                const contentNode = getTemplate('popupBioContent')\n                const bioContent = contentNode.firstElementChild!\n                const otherImages = otherSpeakerImages(matchedSession.speakers)\n                if (otherImages.length > 0) {\n                    const imageElement = bioContent.querySelector('img.largePopupImage')!!\n                    imageElement.classList.add('hide')\n                    const multiImageElement = buildMuliSpeakerImageBlock(speakerInfo.profilePicture, otherImages, true)\n                    imageElement.insertAdjacentElement('afterend', multiImageElement)\n                } else {\n                    const imageElement = (bioContent.querySelector('img.largePopupImage')! as HTMLImageElement)\n                    imageElement.src = speakerInfo.profilePicture\n                }\n\n                setText(bioContent, 'div.bio-speaker', multipleSpeakerNames(matchedSession.speakers))\n                const socialLinkPlaceholder = (bioContent.querySelector('div.bio-social')! as HTMLDivElement)\n                socialLinks.forEach((link) => {\n                    socialLinkPlaceholder.appendChild(link)\n                })\n\n                const bio = getSpeakerBio(matchedSession.speakers)\n                if (otherImages.length === 0) {\n                    setText(bioContent, 'div.bio-tagline', speakerInfo.tagLine)\n                }\n\n                setText(bioContent, 'div.bio-title', matchedSession.title)\n                setText(bioContent, 'div.bio-talk-description', matchedSession.description)\n                setText(bioContent, 'div.bio-speaker-bio', bio)\n                return bioContent\n            } else {\n                return null;\n            }\n        }, 'clickable-session', 'unclickable-session')\n    }\n\n    const fadeOut = (element: HTMLElement) => {\n        let opacity = 1 // initial opacity\n        const decrease = () => {\n            if (opacity <= 0.1) {\n                element.classList.add('hide')\n                return\n            }\n\n            element.style.opacity = opacity.toString()\n            opacity -= opacity * 0.025\n            requestAnimationFrame(decrease)\n        }\n\n        decrease()\n    }\n\n    const fadeIn = (element: HTMLElement) => {\n        let opacity = 0.1 // initial opacity\n        element.classList.remove('hide')\n        const increase = () => {\n            if (opacity >= 1) {\n                return\n            }\n\n            element.style.opacity = opacity.toString()\n            opacity += opacity * 0.025\n            requestAnimationFrame(increase)\n        }\n\n        increase()\n    }\n\n    const rotateImages = () => {\n        setInterval(() => {\n            const imageSets = Array.from(document.querySelectorAll('div[x-imageSet]'))\n            imageSets.forEach((imageSet) => {\n                const images: NodeListOf<HTMLImageElement> = imageSet.querySelectorAll('img')\n                const currentImageIndex = Array.from(images).findIndex((i) => !i.classList.contains('hide'))\n                fadeOut(images[currentImageIndex])\n                let next = currentImageIndex + 1\n                if (next >= images.length) {\n                    next = 0\n                }\n\n                fadeIn(images[next])\n            })\n        }, 3500)\n    }\n\n    const parseEventData = () => {\n        document.querySelectorAll('.agenda-session').forEach((element) => {\n            const div = element as HTMLDivElement\n            const dataSlotId = div.attributes['data-slot-id'].value\n            if (dataSlotId === '999999') {\n                const tbaTemplate = getTemplate('noSessionCardTemplate').querySelector('div')\n                div.insertAdjacentElement('beforeend', tbaTemplate!)\n            } else {\n                const matchedSession = getSession(dataSlotId)\n\n                if (!matchedSession) {\n                    const tbaTemplate = getTemplate('tbaCardTemplate').querySelector('div')\n                    div.insertAdjacentElement('beforeend', tbaTemplate!)\n                } else {\n                    const templateDivs = getTemplate('sessionCardTemplate').querySelectorAll('div')\n                    templateDivs.forEach((templateElement) => {\n                        switch (templateElement.className) {\n                            case 'agenda-session-image': {\n                                const otherImages = otherSpeakerImages(matchedSession.speakers)\n                                if (otherImages.length > 0) {\n                                    const imagesHolder = buildMuliSpeakerImageBlock(singleSpeakerImage(matchedSession.speakers), otherImages)\n                                    templateElement.appendChild(imagesHolder)\n                                } else {\n                                    templateElement.appendChild(speakerImageCreator(singleSpeakerImage(matchedSession.speakers)))\n                                }\n\n                                break\n                            }\n                            case 'agenda-session-name': {\n                                templateElement.innerText = multipleSpeakerNames(matchedSession.speakers)\n                                break\n                            }\n                            case 'agenda-session-title': {\n                                templateElement.innerText = matchedSession.title\n                                break\n                            }\n                        }\n\n                        div.insertAdjacentElement('beforeend', templateElement)\n                    })\n                }\n            }\n        })\n\n        addPopups()\n        toggleUI()\n        rotateImages()\n    }\n\n    eventData = await loadSessionizeData(eventId)\n    if (!eventData) {\n        return\n    }\n\n    parseEventData()\n}\n","import { addPopupHandler, feedbackServerUrl, getTemplate, setText } from './common'\nimport { loadSessionizeData } from './sessionize'\nimport { v4 as uuidv4 } from 'uuid'\n\ninterface QuestionStructure {\n    id: string,\n    label: string,\n    type: 'rate' | 'text' | 'timeslot-selector' | 'yesno' | 'role' | 'level' | 'years' | 'email' | 'influence'\n    key: number | undefined,\n    needs?: string,\n}\n\ninterface SectionStructure {\n    title: string,\n    subtitle?: string,\n    questions: QuestionStructure[]\n    workshop?: number,\n}\n\ninterface QuestionaireStructure {\n    structure: SectionStructure[],\n}\n\nconst tracks = 5\n\nexport default async () => {\n    const stage = document.getElementById('feedbackStage') as HTMLDivElement\n    if (!stage) {\n        return\n    }\n\n    let questions: QuestionaireStructure\n    const storedQuestions = window.sessionStorage.getItem('questionStructure')\n    if (storedQuestions) {\n        questions = JSON.parse(storedQuestions)\n    } else {\n        const questionsResponse = await fetch('/public/ratingconfig.json')\n        if (!questionsResponse.ok) {\n            return\n        } else {\n            questions = await questionsResponse.json()\n            window.sessionStorage.setItem('questionStructure', JSON.stringify(questions))\n        }\n    }\n\n\n    const ratingId = stage.getAttribute('data-rating-id');\n    if (!ratingId) {\n        return\n    }\n\n    const eventId = stage.getAttribute('data-event-id')\n    if (!eventId) {\n        return\n    }\n\n    const sessionStructure = document.getElementById('sessionData')!.innerText.trim().split(' ')\n    const eventData = await loadSessionizeData(eventId)\n\n    const workshopStructure = document.getElementById('workshopData')!.innerText.trim().split(';;;').map(s => s.trim())\n\n    const ratingStoredData = window.localStorage.getItem(`rating${ratingId}`)\n    let ratingData\n    if (!ratingStoredData) {\n        ratingData = {\n            event: ratingId,\n            submitter: uuidv4(),\n        }\n    } else {\n        ratingData = JSON.parse(ratingStoredData)\n    }\n\n    const talkTitle = (sessionId: string): string => {\n        const session = eventData!.sessions.find((s) => s.id === sessionId)\n        if (!session) {\n            return \"To Be Announced\";\n        }\n\n        const speakers = session.speakers\n            .map((speakerId) => eventData!.speakers.find((speaker) => speaker?.id === speakerId))\n            .filter((speaker) => !!speaker)\n            .map((speaker) => speaker?.fullName)\n            .join(' and ');\n        \n        return `${session.title} by ${speakers}`\n    }\n\n    const setValue = (dataSlotId: number, id: string, value: string) => {\n        if (!ratingData[`s${dataSlotId}`]) {\n            ratingData[`s${dataSlotId}`] = {}\n        }\n\n        ratingData[`s${dataSlotId}`][id] = value\n\n        window.localStorage.setItem(`rating${ratingId}`, JSON.stringify(ratingData))\n    }\n\n    const configureTimeSlotSelector = (inputElement: HTMLSelectElement, question: QuestionStructure, dataSlotId: number) => {\n        const start = question.key! * tracks + 1\n        const end = start + tracks\n\n        for (let index = start; index < end; index++) {\n            const sessionId = sessionStructure[index]\n            if (sessionId === '999999') {\n                continue\n            }\n\n            const option = document.createElement('option')\n\n            option.value = sessionId\n            option.text = talkTitle(sessionId)\n\n            inputElement!.append(option)\n        }\n\n        const updateTimeSlot = () => {\n            setValue(dataSlotId, question.id, inputElement.value)\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            inputElement.querySelectorAll('option').forEach((option) => {\n                if (option.value === existingValue) {\n                    option.selected = true\n                }\n            })\n        }\n\n        inputElement.onchange = updateTimeSlot\n    }\n\n    const configureSelector = (inputElement: HTMLSelectElement, question: QuestionStructure, dataSlotId: number) => {\n        const updateValue = () => {\n            setValue(dataSlotId, question.id, inputElement.value)\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            inputElement.querySelectorAll('option').forEach((option) => {\n                if (option.value === existingValue) {\n                    option.selected = true\n                }\n            })\n        }\n\n        inputElement.onchange = updateValue\n    }\n\n    const configureYesNo = (inputElement: HTMLDivElement, question: QuestionStructure, dataSlotId: number) => {\n        const updateTimeSlot = () => {\n            const value = (inputElement.querySelector('input[name=\"yesno\"]:checked') as HTMLInputElement)?.value\n            if (value) {\n                setValue(dataSlotId, question.id, value)\n            }\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            (inputElement.querySelector(`input[name=\"yesno\"][value=\"${existingValue}\"]`) as HTMLInputElement).checked = true\n        }\n\n        inputElement.onchange = updateTimeSlot\n    }\n\n    const configureRating = (inputElement: HTMLDivElement, question: QuestionStructure, dataSlotId: number) => {\n        const ratingElement = (inputElement.querySelector('input[type=\"range\"]') as HTMLInputElement)\n        const updateValue = () => {\n            console.log('update')\n            const value = ratingElement.value\n            if (value) {\n                setValue(dataSlotId, question.id, value)\n            }\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            ratingElement.value = existingValue\n        }\n\n        ratingElement.oninput = updateValue\n    }\n\n    const configureInput = (inputElement: HTMLInputElement, question: QuestionStructure, dataSlotId: number) => {\n        const updateValue = () => {\n            const { value } = inputElement\n            if (value) {\n                setValue(dataSlotId, question.id, value)\n            }\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            inputElement.value = existingValue\n        }\n\n        inputElement.onchange = updateValue\n    }\n\n    const configureText = (inputElement: HTMLTextAreaElement, question: QuestionStructure, dataSlotId: number) => {\n        const updateValue = () => {\n            const { value } = inputElement\n            if (value) {\n                setValue(dataSlotId, question.id, value)\n            }\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            inputElement.value = existingValue\n        }\n\n        inputElement.onchange = updateValue\n    }\n\n    const configureYears = (inputElement: HTMLInputElement, question: QuestionStructure, dataSlotId: number) => {\n        const updateValue = () => {\n            const { value } = inputElement\n            if (value) {\n                let valueAsNumber: number | undefined = undefined\n                try {\n                    valueAsNumber = +value\n                } catch { }\n\n                if (valueAsNumber && valueAsNumber >= 0 && valueAsNumber <= 60) {\n                    setValue(dataSlotId, question.id, value)\n                }\n            }\n        }\n\n        const existingValue = ratingData[`s${dataSlotId}`]?.[question.id]\n        if (existingValue) {\n            inputElement.value = existingValue\n        }\n\n        inputElement.onchange = updateValue\n    }\n\n    const needsNotMet = ['no', 'none']\n\n    const countComplete = (id: number): number => {\n        const answers = ratingData[`s${id}`] || {}\n        return Object.keys(answers).filter(key => {\n            const questionStructure = questions.structure[id].questions.find(q => q.id === key)\n            if (!questionStructure) {\n                return false\n            }\n            \n            const answeredValue = answers[key]\n            if (questionStructure.type === 'timeslot-selector' && answeredValue === 'none') {\n                return false\n            } \n\n            const needs = questionStructure.needs\n            if (!needs) {\n                return true\n            }\n\n            const needsValue = answers[needs]\n            if (!needsValue) {\n                return true\n            }\n\n            return !needsNotMet.find(n => n === needsValue)\n        }).length\n    }\n\n    const updateCompleted = () => {\n        document.querySelectorAll('div.feedbackButton').forEach((button) => {\n            const id = +button.attributes['data-id'].value\n            setText(button, '.feedbackButtonProgressBar', `Questions Completed ${countComplete(id)} / ${questions.structure[id].questions.length}`)\n        })\n    }\n\n    const addPopups = () => {\n        addPopupHandler(document.querySelectorAll('.feedbackButton'), (div) => {\n            const dataSlotId = +div.attributes['data-id'].value\n            const popupContent = getTemplate('feedbackPopup').firstElementChild!\n            const section = questions.structure[dataSlotId]\n            setText(popupContent, 'div.feedbackTitle', `Feedback for ${section.title}`)\n            section.questions.forEach((question) => {\n                const questionBaseElement = getTemplate('questionTemplate').firstElementChild!\n                setText(questionBaseElement, 'div.questionTitle', question.label)\n\n                const inputElement = getTemplate(`${question.type}QuestionStyleTemplate`).firstElementChild!\n\n                switch (question.type) {\n                    case 'email': {\n                        configureInput(inputElement as HTMLInputElement, question, dataSlotId)\n                        break\n                    }\n                    case 'level':\n                    case 'role':\n                    case 'influence': {\n                        configureSelector(inputElement as HTMLSelectElement, question, dataSlotId)\n                        break\n                    }\n                    case 'text': {\n                        configureText(inputElement as HTMLTextAreaElement, question, dataSlotId)\n                        break\n                    }\n                    case 'rate': {\n                        configureRating(inputElement as HTMLDivElement, question, dataSlotId)\n                        break\n                    }\n                    case 'yesno': {\n                        configureYesNo(inputElement as HTMLDivElement, question, dataSlotId)\n                        break\n                    }\n                    case 'years': {\n                        configureYears(inputElement as HTMLInputElement, question, dataSlotId)\n                        break\n                    }\n                    case 'timeslot-selector': {\n                        configureTimeSlotSelector(inputElement as HTMLSelectElement, question, dataSlotId)\n                        break\n                    }\n                }\n\n                inputElement.attributes['data-rating-field-id'] = question.id\n                questionBaseElement.insertAdjacentElement('beforeend', inputElement)\n                popupContent.insertAdjacentElement('beforeend', questionBaseElement)\n            })\n\n            const doneButton = getTemplate('doneButton').firstElementChild! as HTMLButtonElement\n            doneButton.onclick = () => {\n                (document.querySelector('div.popupClose')! as HTMLDivElement).dispatchEvent(new Event('click'))\n            }\n            popupContent.insertAdjacentElement('beforeend', doneButton)\n            return popupContent\n        }, undefined, undefined, () => {\n            updateCompleted()\n        }, (content) => {\n            content.querySelectorAll('input[type=\"range\"]').forEach(i => {\n                i.dispatchEvent(new Event('input'))\n            })\n        })\n    }\n\n    const addSubmit = () => {\n        const saveButton = (document.getElementById('saveDataButton') as HTMLButtonElement)\n        saveButton.onclick = (event) => {\n            saveButton.innerText = 'Saving...';\n            saveButton.disabled = true\n            event.preventDefault()\n            // eslint-disable-next-line no-undef\n            grecaptcha.ready(async () => {\n                // eslint-disable-next-line no-undef\n                const token = await grecaptcha.execute('6LfkPcUlAAAAAHwYs14fkTiEZYsu5hAAq_bLKp-j', { action: 'submit' })\n                ratingData.captcha = token\n                const uploadResult = await fetch(feedbackServerUrl, {\n                    method: 'POST',\n                    body: JSON.stringify(ratingData),\n                })\n\n                if (!uploadResult.ok) {\n                    saveButton.innerText = 'Save';\n                    saveButton.disabled = false\n                    alert('Oh no! Something has gone horribly wrong. Please reload your browser and try again.')\n                } else {\n                    saveButton.disabled = false\n                    saveButton.innerText = 'Save Complete';\n                    setTimeout(() => {\n                        saveButton.innerText = 'Save';\n                    }, 2000)\n                }\n            })\n        }\n\n        saveButton.style.display = 'unset'\n    }\n\n    const addButtons = () => {\n        stage.removeChild(document.getElementById('feedbackLoading')!)\n        questions.structure.forEach((question, index) => {\n            let show = false\n            let subTitle: string | undefined = undefined\n            if (question.workshop !== undefined) {\n                const workshopTitle = workshopStructure[question.workshop]\n                if (workshopTitle !== 'none') {\n                    show = true\n                    subTitle = workshopTitle\n                }\n            } else {\n                if (question.subtitle) {\n                    subTitle = question.subtitle\n                }\n\n                show = true\n            }\n\n            if (show) {\n                const questionButton = getTemplate('feedbackButton').querySelector('div')!\n                questionButton.setAttribute('data-id', index.toString())\n                setText(questionButton, '.feedbackButtonTitle', question.title)\n                setText(questionButton, '.feedbackButtonProgressBar', `Questions Completed ${countComplete(index)} / ${question.questions.length}`)\n                if (subTitle) {\n                    setText(questionButton, '.feedbackButtonWorkshop', subTitle)\n                }\n\n                stage.insertAdjacentElement('beforeend', questionButton)\n            }\n        })\n    }\n\n    addButtons()\n    addPopups()\n    addSubmit()\n}\n","export default () => {\n    const sponsorBlock = document.getElementsByClassName('sponsor-content-detail-wide-body')[0]\n    if (!sponsorBlock) {\n        return\n    }\n\n    let sponsorPosition = 0\n\n    setInterval(() => {\n        sponsorPosition += 0.25\n        if (sponsorPosition > sponsorBlock.scrollWidth) {\n            sponsorPosition = 0\n        }\n        sponsorBlock.scrollTo(sponsorPosition, 0)\n    }, 10)\n}\n","import { feedbackServerUrl, getTemplate } from \"./common\";\n\ninterface EventData {\n    event: string;\n    feedback: Feedback[];\n}\n\ninterface Feedback {\n    feedback?: string;\n    ratingPresentation: number;\n    ratingContent: number;\n    ratingValue: number;\n}\n\n\nexport default () => {\n    const target = document.getElementById('speakerFeedbackReport') as HTMLDivElement\n    if (!target) {\n        return\n    }\n\n    const speakerKeyElement = (document.getElementById('speakerKey') as HTMLInputElement)!\n\n    const comparedValue = (speakerScore: number, average: number | undefined): string => {\n        const avgValue = (average || 0)\n        if (avgValue === 0) {\n            return avgValue.toFixed(2);\n        }\n\n        let symbol = ''\n        if (speakerScore > avgValue) {\n            symbol = '↑'\n        }\n\n        if (speakerScore < avgValue) {\n            symbol = '↓'\n        }\n\n        return `${avgValue.toFixed(2)} ${symbol}`\n    }\n\n    const showData = (data: EventData[], averages) => {\n        target.innerHTML = ''\n        data.forEach(event => {\n            const title = getTemplate('title')!.firstElementChild as HTMLDivElement\n            title.innerText = event.event\n            target.insertAdjacentElement('beforeend', title)\n\n            const feedbackTable = getTemplate('feedbackTable')!.firstElementChild as HTMLTableElement\n\n            const feedbackTotals = event.feedback.reduce((acc, nextValue) => {\n                acc.presSum += nextValue.ratingPresentation\n                acc.contentSum += nextValue.ratingContent\n                acc.valueSum += nextValue.ratingValue\n                return acc\n            }, { presSum: 0, contentSum: 0, valueSum: 0 });\n\n            const presAvg = (feedbackTotals.presSum / event.feedback.length);\n            const contentAvg = (feedbackTotals.contentSum / event.feedback.length);\n            const valueAvg = (feedbackTotals.valueSum / event.feedback.length);\n\n            (feedbackTable.querySelector('#presAvg') as HTMLTableCellElement).innerText = presAvg.toFixed(2);\n            (feedbackTable.querySelector('#contentAvg') as HTMLTableCellElement).innerText = contentAvg.toFixed(2);\n            (feedbackTable.querySelector('#valueAvg') as HTMLTableCellElement).innerText = valueAvg.toFixed(2);\n\n            if (averages.length > 0) {\n                const average = averages[0];\n                (feedbackTable.querySelector('#timeslotPresAvg') as HTMLTableCellElement).innerText = comparedValue(presAvg, average[`${event.event}-ratingPresentationtimeslot`]);\n                (feedbackTable.querySelector('#timeslotContentAvg') as HTMLTableCellElement).innerText = comparedValue(contentAvg, average[`${event.event}-ratingContenttimeslot`]);\n                (feedbackTable.querySelector('#timeslotValueAvg') as HTMLTableCellElement).innerText = comparedValue(valueAvg, average[`${event.event}-ratingValuetimeslot`]);\n\n                (feedbackTable.querySelector('#eventPresAvg') as HTMLTableCellElement).innerText = comparedValue(presAvg, average[`${event.event}-ratingPresentation`]);\n                (feedbackTable.querySelector('#eventContentAvg') as HTMLTableCellElement).innerText = comparedValue(contentAvg, average[`${event.event}-ratingContent`]);\n                (feedbackTable.querySelector('#eventValueAvg') as HTMLTableCellElement).innerText = comparedValue(valueAvg, average[`${event.event}-ratingValue`]);\n\n                (feedbackTable.querySelector('#globalPresAvg') as HTMLTableCellElement).innerText = comparedValue(presAvg, average['global-ratingPresentation']);\n                (feedbackTable.querySelector('#globalContentAvg') as HTMLTableCellElement).innerText = comparedValue(contentAvg, average['global-ratingContent']);\n                (feedbackTable.querySelector('#globalValueAvg') as HTMLTableCellElement).innerText = comparedValue(valueAvg, average['global-ratingValue']);\n            } else {\n                feedbackTable.querySelectorAll('.additionalAverageInfo').forEach(item => { \n                    console.log('sdd');\n                    (item as HTMLTableRowElement).style.display = 'none'; \n                });\n            }\n\n            const footerRow = (feedbackTable.querySelector('#feedbackFooter') as HTMLTableRowElement)\n            event.feedback.forEach((f) => {\n                const row = getTemplate('feedbackRow')!.firstElementChild as HTMLTableRowElement\n                (row.querySelector('.presValue') as HTMLTableCellElement).innerText = f.ratingPresentation.toFixed(0);\n                (row.querySelector('.contentValue') as HTMLTableCellElement).innerText = f.ratingContent.toFixed(0);\n                (row.querySelector('.valueValue') as HTMLTableCellElement).innerText = f.ratingValue.toFixed(0);\n                (row.querySelector('.feedbackValue') as HTMLTableCellElement).innerText = f.feedback || ''\n\n                footerRow.insertAdjacentElement('beforebegin', row)\n            })\n\n            target.insertAdjacentElement('beforeend', feedbackTable)\n        })\n    }\n\n    const addButton = () => {\n        const button = document.getElementById('getDataButton') as HTMLButtonElement\n        if (!button) {\n            return\n        }\n\n        button.onclick = async () => {\n            button.disabled = true\n            button.innerText = 'Loading...'\n            const key = speakerKeyElement.value\n            const data = await fetch(`${feedbackServerUrl}?speaker=${key}`)\n            if (data.ok) {\n                const dataSet = await data.json() as Array<any>;\n                const averages = dataSet.filter(row => !row.event)\n                showData(dataSet.filter(row => row.event) as EventData[], averages)\n                window.localStorage.setItem('speakerFeedbackKey', key)\n            }\n\n            button.disabled = false\n            button.innerText = 'Get Report'\n        }\n    }\n\n    const preloadSpeakerKey = () => {\n        const speakerKey = window.localStorage.getItem('speakerFeedbackKey')\n        if (speakerKey) {\n            speakerKeyElement.value = speakerKey\n        }\n    }\n\n    addButton()\n    preloadSpeakerKey()\n}"],"names":["feedbackServerUrl","getTemplate","templateId","document","getElementById","cloneNode","content","setText","parent","query","value","querySelector","innerText","addPopupHandler","elementsToAddPopupTo","popupContentBuilder","clickableClass","unclickableClass","onCloseHandler","onOpenHandler","closePopup","classList","add","removeEventListener","handleCloseKeyPress","contentToRemove","parentNode","removeChild","call","event","key","onclick","backdrop","addEventListener","forEach","div","popupContent","remove","popupContentStage","querySelectorAll","setAttribute","insertAdjacentElement","loadSessionizeData","async","eventId","result","existingData","id","sessionData","window","sessionStorage","getItem","JSON","parse","alert","loadStoredData","navigator","onLine","response","fetch","ok","json","setItem","stringify","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","options","buf","offset","rnds","random","arr","unsafeStringify","agendaPlaceholder","getAttribute","eventData","getSpeakerInfo","sessionSpeakers","speakers","filter","s","indexOf","multipleSpeakerNames","remappedSpeakers","map","fullName","length","_","index","join","otherSpeakerImages","profilePicture","singleSpeaker","singleSpeakerImage","getSession","sessionId","sessions","session","speakerImageCreator","src","hide","imageElement","createElement","buildMuliSpeakerImageBlock","primaryImage","otherImages","isLargePopupImage","imagesHolder","firstImage","appendChild","otherSpeaker","nextImage","element","dataSlotId","attributes","tbaTemplate","matchedSession","templateElement","className","title","divDataSlotId","speakerInfo","socialLinks","flatMap","speaker","links","link","aTag","target","href","url","image","alt","buildSocialBadges","bioContent","firstElementChild","multiImageElement","socialLinkPlaceholder","bio","getSpeakerBio","tagLine","description","style","display","setInterval","Array","from","imageSet","images","currentImageIndex","findIndex","contains","opacity","decrease","requestAnimationFrame","fadeOut","next","increase","fadeIn","stage","questions","storedQuestions","questionsResponse","ratingId","sessionStructure","trim","split","workshopStructure","ratingStoredData","localStorage","ratingData","submitter","talkTitle","find","speakerId","setValue","needsNotMet","countComplete","answers","Object","keys","questionStructure","structure","q","answeredValue","type","needs","needsValue","n","question","subTitle","show","undefined","workshop","workshopTitle","subtitle","questionButton","section","questionBaseElement","label","inputElement","existingValue","onchange","configureInput","option","selected","configureSelector","configureText","ratingElement","oninput","console","log","configureRating","checked","configureYesNo","valueAsNumber","configureYears","start","end","text","append","configureTimeSlotSelector","doneButton","dispatchEvent","Event","button","saveButton","disabled","preventDefault","grecaptcha","ready","token","execute","action","captcha","method","body","setTimeout","addSubmit","feedback","sponsorBlock","getElementsByClassName","sponsorPosition","scrollWidth","scrollTo","speakerKeyElement","comparedValue","speakerScore","average","avgValue","toFixed","symbol","data","dataSet","averages","row","innerHTML","feedbackTable","feedbackTotals","reduce","acc","nextValue","presSum","ratingPresentation","contentSum","ratingContent","valueSum","ratingValue","presAvg","contentAvg","valueAvg","item","footerRow","f","showData","addButton","speakerKey","preloadSpeakerKey","speakerFeedback"],"sourceRoot":""}